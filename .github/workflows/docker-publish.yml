name: Nodejs application deploy on EKS 
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        #IMAGE_TAG: "latest"
        IMAGE_TAG: ${{ github.run_number }}

      run: |
        # Build a docker container and push it to ECR 
        docker build -t github:$IMAGE_TAG  .
        docker tag github:$IMAGE_TAG 566903284890.dkr.ecr.ap-south-2.amazonaws.com/github:$IMAGE_TAG
        echo "Pushing image to ECR..."
        docker push 566903284890.dkr.ecr.ap-south-2.amazonaws.com/github:$IMAGE_TAG
        #docker push 566903284890.dkr.ecr.ap-south-2.amazonaws.com/github:latest
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . 
        #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
   
    - name: Install and configure kubectl
      run: |
        # VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
        # https://github.com/aws/aws-cli/issues/6920#issuecomment-1117981158
        # VERSION=v1.25.6
        curl -LO https://storage.googleapis.com/kubernetes-release/release/v1.25.6/bin/darwin/amd64/kubectl

        chmod +x ./kubectl

        sudo mv ./kubectl /usr/local/bin/kubectl

        echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml

    
   # - name: config kubect
   #  uses: azure/k8s-set-context@v1
   #   with:
   #     method: kubeconfig
   #     kubeconfig: ${{ secrets.KUBE_CONFIG_DATA}}
    - name: eks
      run:
         kubectl apply ./kube/manifests/Deployment.yaml
        
      


        


