name: Nodejs application deploy on EKS 
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      
    - name: Install Kubectl
      uses: azure/setup-kubectl@v2.0
      with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG_DATA}}
        #version: 'v1.25.0'
      #id: install  
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ap-south-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push the image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
        #IMAGE_TAG: "latest"
        IMAGE_TAG: ${{ github.run_number }}

      run: |
        # Build a docker container and push it to ECR 
        docker build -t github:$IMAGE_TAG  .
        docker tag github:$IMAGE_TAG 566903284890.dkr.ecr.ap-south-2.amazonaws.com/github:$IMAGE_TAG
        echo "Pushing image to ECR..."
        docker push 566903284890.dkr.ecr.ap-south-2.amazonaws.com/github:$IMAGE_TAG
        #docker push 566903284890.dkr.ecr.ap-south-2.amazonaws.com/github:latest
        #docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG . 
        #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"
    - name: update kube config
      run: aws eks update-kubeconfig:${{ secrets.KUBE_CONFIG_DATA }} --name EKS --region ap-south-2
      
    - name: Deploy to EKS
      run: kubectl apply -f deployment.yaml 

    
    #- name: config kubect
    #  uses: azure/k8s-set-context@v1
     # with:
      #  method: kubeconfig
       # kubeconfig: ${{ secrets.KUBE_CONFIG_DATA}}
       
    #- name: Install and configure kubectl
     # run: |
      #  VERSION=$(curl --silent https://storage.googleapis.com/kubernetes-release/release/stable.txt)
       # curl https://storage.googleapis.com/kubernetes-release/release/$VERSION/bin/linux/amd64/kubectl \
        #     --progress-bar \
         #    --location \
          #   --remote-name
        #chmod +x kubectl
        #sudo mv kubectl /usr/local/bin/
        #echo ${{ secrets.KUBECONFIG }} | base64 --decode > kubeconfig.yaml
        
    #- name: Deploy
    #  env:
     #   ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      #  ECR_REPOSITORY: ${{ secrets.REPO_NAME }}
       # #IMAGE_TAG: "latest"
        #IMAGE_TAG: ${{ github.run_number }}
     # run: |
      #  export ECR_REPOSITORY=${{ secrets.REPO_NAME }}
       # export IMAGE_TAG=${{ github.run_numbe }}
        #export KUBE_CONFIG_DATA=kubeconfig.yaml
        #kubectl apply -f deployment.yaml
        
   # - name: eks
   #   run:
   #      kubectl apply ./kube/manifests/Deployment.
   # envsubst < k8s/kustomization.tmpl.yaml > k8s/kustomization.yaml
   #kubectl kustomize k8s |
        
      


        


